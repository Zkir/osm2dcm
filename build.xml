<?xml version="1.0" encoding="UTF-8" ?>
<project name="osm2dcm" basedir="." default="full_build"> 

  <property name="vbexe"          location="c:\Program Files (x86)\Microsoft Visual Studio\VB98\vb6.EXE"/> 
  <property name="buildpath"      location="d:\osm\osm2dcm"/> 
  <property name="osmdatapath"      location="d:\osm\osm_data"/> 
  <property name="productionpath" location="o:\osm2dcm"/>  
  
  <target name="clean">
    <echo>Cleaning the ${buildpath}</echo>
    <delete dir="${buildpath}"/>
  </target>
  
  <target name="init" depends="clean">
    <echo>Creating the build directory</echo>
    <mkdir dir="${buildpath}"/>
    <mkdir dir="${buildpath}\poly"/>
  </target>
  
  <target name="compile" depends="init">
    <!-- VB6 -->
    <echo> -- Compile vb routines</echo>
    <!--Прога подсчета статистики -->
    <echo>zOsmStat</echo>
    <exec executable="${vbexe}" failonerror="true"> 
      <arg value="-make"/> 
      <arg value="zOsmStat\zOsmStat.vbp"/> 
      <arg value="${buildpath}\zOsmStat.exe"/> 
      <arg value="-out"/> 
      <arg value="${buildpath}:\build_log.txt"/> 
    </exec>
     
    <!--Постпроцессор / Валидатор -->
    <!--<echo>mpFilter</echo>
    <exec executable="${vbexe}" failonerror="true"> 
      <arg value="-make"/> 
      <arg value="mpFilter\mpPostProcessor.vbp"/> 
      <arg value="${buildpath}\mpPostProcessor.exe"/> 
      <arg value="-out"/> 
      <arg value="${buildpath}:\build_log.txt"/> 
    </exec> -->

    
    <!--Отслеживалка изменений -->
    <!--
    <echo>ChangeTracker</echo>
    <exec executable="${vbexe}" failonerror="true"> 
      <arg value="-make"/> 
      <arg value="ChangeTracker\ChangeTracker.vbp"/> 
      <arg value="${buildpath}\ChangeTracker.exe"/> 
      <arg value="-out"/> 
      <arg value="${buildpath}:\build_log.txt"/> 
    </exec> -->
    
    <!-- JAVA -->
    <echo> -- Compile java routines</echo>
    
    <!--Планировщик -->
    <echo>osm2dcm.planner</echo>
    
     <javac destdir="osm2dcm.planner/out/production/osm2dcm.planner" encoding = "utf-8" includeantruntime="false">
      <src path="osm2dcm.planner/src"/>
     </javac>
    
     <jar destfile="${buildpath}/osm2dcm.planner.jar" manifest="osm2dcm.planner/META-INF/MANIFEST.MF" >
       <fileset dir="osm2dcm.planner/out/production/osm2dcm.planner">
         <include name="**/*.class"/>
       </fileset>
     </jar>
    
    <!--Проверялка релиз-критерия -->
    <echo>qa_release</echo>
        
    
     <javac destdir="qa_release/out/production/qa_release" encoding = "utf-8" includeantruntime="false">
      <src path="qa_release/src"/>
     </javac>
    
     <jar destfile="${buildpath}/qa_release.jar" manifest="qa_release/META-INF/MANIFEST.MF" >
       <fileset dir="qa_release/out/production/qa_release">
         <include name="**/*.class"/>
       </fileset>
     </jar>
    
    <!--Постпроцессор -->
    <echo>jmp2mp</echo>
    
     <javac destdir="jmp2mp/out/production/jmp2mp" encoding = "utf-8" includeantruntime="false">
      <src path="jmp2mp/src"/>
     </javac>
    
     <jar destfile="${buildpath}/jmp2mp.jar" manifest="jmp2mp/META-INF/MANIFEST.MF" >
       <fileset dir="jmp2mp/out/production/jmp2mp">
         <include name="**/*.class"/>
       </fileset>
     </jar>
     
     <echo>jmp2mp2</echo>
    
     <javac destdir="jmp2mp2/out/production/jmp2mp2" 
            encoding = "utf-8" includeantruntime="false" 
            classpath="javalibs/junidecode-0.1.1.jar;javalibs/slf4j-api-1.6.3.jar;javalibs/trove4j-2.0.2.jar;javalibs/jsi-1.0.0.jar">
      <src path="jmp2mp2/src"/>
      
     </javac>
    
     <jar destfile="${buildpath}/jmp2mp2.jar" manifest="jmp2mp2/META-INF/MANIFEST.MF" >
       <fileset dir="jmp2mp2/out/production/jmp2mp2">
         <include name="**/*.class"/>
       </fileset>
       <zipgroupfileset dir="" includes="javalibs/**/*.jar" />
     </jar>
      
    <echo>PolyBuffer</echo>
    
     <javac destdir="PolyBuffer/out/production/PolyBuffer" 
            encoding = "utf-8" includeantruntime="false" 
            classpath="javalibs/jts-1.13.jar">
      <src path="PolyBuffer/src"/>
      
     </javac>
    
     <jar destfile="${buildpath}/polybuffer.jar" manifest="polybuffer/META-INF/MANIFEST.MF" >
       <fileset dir="polybuffer/out/production/polybuffer">
         <include name="**/*.class"/>
       </fileset>
       <zipgroupfileset dir="" includes="javalibs/jts-1.13.jar" />
     </jar>
     

    <echo> -- Compile delphi routines</echo>
    <!--mp2mp -->
    <echo>delphi mp2mp (just copying)</echo> 
    <copy todir="${buildpath}" includeEmptyDirs="false" >
        <fileset file="mp2mp\Win32\Debug\mp2mp.exe"  />
    </copy>
    
  </target> 
  
  <!--Часть файлов просто копируется -->
  <target name="copy" depends="init" >
    <copy todir="${buildpath}" includeEmptyDirs="false" >
        <fileset file="osm2dcm\*.*"  />
    </copy>
    
    <copy todir="${buildpath}\osm2mp.config">
        <fileset dir="osm2dcm\osm2mp.config"/>
    </copy>
    
    <copy todir="${buildpath}\osm2mp.config.no_buildings">
        <fileset dir="osm2dcm\osm2mp.config.no_buildings"/>
    </copy>
    
    <copy todir="${buildpath}\poly">
        <fileset dir="osm2dcm\poly"/>
    </copy>
    
    <copy todir="${buildpath}\poly.src">
        <fileset dir="osm2dcm\poly.src"/>
    </copy>
    
    <copy todir="${buildpath}\pre.mp">
        <fileset dir="osm2dcm\pre.mp"/>
    </copy>
    
    <copy todir="${osmdatapath}\_my\test">
        <fileset dir="osm2dcm\_my\test"/>
    </copy>
    
    <copy todir="${osmdatapath}\_my\test.GK">
        <fileset dir="osm2dcm\_my\test.GK"/>
    </copy>
    
    <copy todir="${osmdatapath}\_my\test.PP">
        <fileset dir="osm2dcm\_my\test.PP"/>
    </copy>
    
    <copy todir="${osmdatapath}\_my\test.FJ">
        <fileset dir="osm2dcm\_my\test.FJ"/>
    </copy>
   
    <copy todir="${buildpath}"  >
        <fileset file="osm2dcm\osm2mp.pl.patched\osm2mp_new.pl"  />
    </copy>
    <copy todir="${buildpath}"  >
        <fileset file="peirce.ru\QualityCriteria.xml"  />
    </copy>
    
  </target>

  <target name="test_GK" description="Geocoder test" depends="">
  <echo>test of Geocoder </echo>
    
    <java jar="${buildpath}\jmp2mp2.jar"
           fork="true"
           failonerror="true"
           maxmemory="1280m"
           >
         <arg value="--readmp" />
         <arg value="file=&quot;${osmdatapath}\_my\TEST.GK\CU-FULL.pre.mp&quot;" />
         <arg value="--geocode" />
         <arg value="src=&quot;${osmdatapath}\_my\TEST.GK\boundaries.osm&quot;" />
         <arg value="mapcode=&quot;CU-FULL&quot;" />
         <arg value="--writemp" />
         <arg value="file=&quot;${osmdatapath}\_my\TEST.GK\CU-FULL.mp&quot;"/>
         <classpath>
           <pathelement location="${buildpath}\jmp2mp2.jar"/>
         </classpath>
    </java>
    <echo>Compare with etalon</echo>
    <condition property="gk_tests_ok"> 
      <filesmatch file1="${osmdatapath}\_my\TEST.GK\CU-FULL.mp" file2="${osmdatapath}\_my\TEST.GK\CU-FULL.etalon.mp"/> 
    </condition> 
    <fail unless="gk_tests_ok" message="geocoder test failed"/> 
    <echo>Geocoder test OK</echo>
  </target>

  <target name="test_PP" description="Postprocessor/validator test" depends="">
  <echo>test of postprocessor/validator </echo>
    
    <java jar="${buildpath}\jmp2mp.jar"
           fork="true"
           failonerror="true"
           maxmemory="1280m"
           >
         <arg value="${osmdatapath}\_my\TEST.PP\RU-NIZ.pre.mp" />
         <arg value="${osmdatapath}\_my\TEST.PP\RU-NIZ.mp" />
         <arg value=" " />
         <arg value="0" />
         <arg value="0" />
         <arg value="0" />
         <arg value="1" />
         <classpath>
           <pathelement location="${buildpath}\jmp2mp.jar"/>
         </classpath>
    </java>
    <echo>Compare with etalon</echo>
    <condition property="pp_tests_ok"> 
      <and>
      <filesmatch file1="${osmdatapath}\_my\TEST.PP\RU-NIZ.mp" file2="${osmdatapath}\_my\TEST.PP\RU-NIZ.etalon.mp"/> 
      <filesmatch file1="${osmdatapath}\_my\TEST.PP\RU-NIZ.mp_addr.xml" file2="${osmdatapath}\_my\TEST.PP\RU-NIZ.mp_addr.etalon.xml"/> 
      </and>
    </condition> 
    <fail unless="pp_tests_ok" message="validator test failed"/> 
    <echo>postprocessor/validator test OK</echo>
  </target>

  <target name="test_FJ" description="test of Force Junctions task" depends="">
  <echo>test of Force Junction task </echo>
    
    <java jar="${buildpath}\jmp2mp2.jar"
           fork="true"
           failonerror="true"
           maxmemory="1280m"
           >
         <arg value="--readmp" />
         <arg value="file=&quot;${osmdatapath}\_my\TEST.FJ\EU-OVRV.mp_opt.mp&quot;" />
         <arg value="--forcejunctions" />
         <arg value="--writemp" />
         <arg value="file=&quot;${osmdatapath}\_my\TEST.FJ\EU-OVRV.roads.mp&quot;"/>
         <classpath>
           <pathelement location="${buildpath}\jmp2mp2.jar"/>
         </classpath>
    </java>
    <echo>Compare with etalon</echo>
    <condition property="fj_tests_ok"> 
      <filesmatch file1="${osmdatapath}\_my\TEST.FJ\EU-OVRV.roads.mp" file2="${osmdatapath}\_my\TEST.FJ\EU-OVRV.roads.etalon.mp"/> 
    </condition> 
    <fail unless="fj_tests_ok" message="force junctions test failed"/> 
    <echo>force junctions test OK</echo>
  </target>

  <target name="tests" description="Unit tests" depends="test_GK,test_PP,test_FJ" >
    <echo>Unit tests completed OK</echo>
  </target>
    
  <target name="full_build" description="Do the entire build" depends="compile,copy,tests" >
    <echo>Full build of Osm2dcm has been completed OK</echo>
  </target>

</project> 